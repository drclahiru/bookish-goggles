// An interface could be reusable across multiple files to ensure
// that things "interface" correctly 
interface Person {
    name: String,
    age: Number
}

// Define the data from the spreadsheet
A1..4 = ["a", "b", "c", "d"]
B1..4 = [20, 24, 28, 32]

// Create a binding to the table using the Person interface and specifying the begining and end.
table Persons = Person[1..4] {
    name: A,
    age: B,
}

let get_age = \x -> x.age

// Do some calculations using the table we defined. Functions such 
// as map, reduce, filter, etc. would be built-in for tables.
// (and lists too I suppose).
let average_age = Persons
    .map(get_age)
    .reduce(\sum x -> sum + x, 0) / Persons.length()

// Maybe we have a print function that works for all types?
average_age.print()